# -*- mode:python;indent-tabs-mode:t;show-trailing-whitespace:t; -*-
#
# Project settings for rosetta sources
# (c) Copyright Rosetta Commons Member Institutions.
# (c) This file is part of the Rosetta software suite and is made available under license.
# (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
# (c) For more information, see http://www.rosettacommons.org. Questions about this can be
# (c) addressed to University of Washington CoMotion, email: license@uw.edu.

########### KEEP DIRECTORIES AND FILES IN ALPHABETICAL ORDER ###########

sources = {
	"utility": [
		"backtrace",
		"Binary_Util",
		"crash_report",
		"CSI_Sequence",
		"curl",
		"dating",
		"exit",
		"gemmi_util",
		"heap",
		"inline_file_provider",
		"integer_mapping",
		"json_utilities",
		"LexicographicalIterator",
		"mpi_util",
		"SimulateMPI",
		"sys_util",
		"recent_history_queue",
		"static_database",
		"string_util",
		"vector0.srlz",
		"vector1.srlz",
		"VirtualBase.srlz",
	],
	"utility/boinc": [
		"boinc_util",
	],
	"utility/excn": [
		"Exceptions",
	],
	"utility/file": [
		"file_sys_util",
		"FileName",
		"gzip_util",
		"PathName",
	],
	"utility/graph": [
		"ArrayPool",
		"DisjointSets",
		"Digraph",
		"Graph",
		"graph_util",
		"LowMemGraph",
	],
	"utility/io": [
		"FileContentsMap",
		"GeneralFileManager",
		"icstream",
		"izstream",
		"ocstream",
		"ozstream",
		"util",
		"base64",
		"tarparser",
	],
	"utility/keys": [
                "Key",
		"Key2Tuple.srlz",
		"Key3Tuple.srlz",
		"Key4Tuple.srlz",
	],
	"utility/libsvm":[
		"Svm_rosetta",
		"Svm",
	],
	"utility/json_spirit": [
		"json_spirit_reader",
		"json_spirit_value",
		"json_spirit_writer",
		"json_spirit_tools",
	],
	"utility/options": [
		"BooleanOption",
		"BooleanVectorOption",
		"FileOption",
		"FileVectorOption",
		"IntegerOption",
		"IntegerVectorOption",
		"Option",
		"OptionCollection",
		"PathOption",
		"PathVectorOption",
		"RealOption",
		"RealVectorOption",
		"ResidueChainVectorOption",
		"ScalarOption",
		"StringOption",
		"StringVectorOption",
		"VectorOption",
		"mpi_stderr",
	],
	"utility/options/keys": [
		"OptionKeyList",
		"OptionKeys",
		"AnyOptionKey",
		"AnyVectorOptionKey",
		"BooleanOptionKey",
		"BooleanVectorOptionKey",
		"FileOptionKey",
		"FileVectorOptionKey",
		"IntegerOptionKey",
		"IntegerVectorOptionKey",
		"OptionKey",
		"PathOptionKey",
		"PathVectorOptionKey",
		"RealOptionKey",
		"RealVectorOptionKey",
		"ResidueChainVectorOptionKey",
		"ScalarOptionKey",
		"StringOptionKey",
		"StringVectorOptionKey",
		"VectorOptionKey",
	],
	"utility/pointer": [
		# leave this here so Xcode will include the headers in the project!
	],
	"utility/pointer/boost": [
		# leave this here so Xcode will include the headers in the project!
	],
	"utility/pointer/std": [
		# leave this here so Xcode will include the headers in the project!
	],
	"utility/py": [
		"PyExitCallback",
	],
	"utility/serialization": [
		"serialization",
	],
	"utility/serialization/ObjexxFCL": [
		"DynamicIndexRange.srlz",
		"FArray1D.srlz",
		"FArray2D.srlz",
		"FArray3D.srlz",
		"ubyte.srlz",
	],
	"utility/sql_database": [
		"DatabaseSessionManager",
		"types",
	],
	"utility/tag": [
		"Tag",
		"util",
		"XMLSchemaGeneration",
		"XMLSchemaValidation",
	],
	"utility/thread": [
		"ReadWriteMutex",
	],
	"utility/xsd_util": [
		"util",
	],
}
include_path = [
]
library_path = [
]
libraries = [
]
subprojects = [
	"ObjexxFCL",
]
