# Binder config for Rosetta
+default_static_pointer_return_value_policy           pybind11::return_value_policy::reference
+default_static_lvalue_reference_return_value_policy  pybind11::return_value_policy::reference
+default_static_rvalue_reference_return_value_policy  pybind11::return_value_policy::move

+default_member_pointer_return_value_policy           pybind11::return_value_policy::reference
+default_member_lvalue_reference_return_value_policy  pybind11::return_value_policy::reference_internal
+default_member_rvalue_reference_return_value_policy  pybind11::return_value_policy::move

-namespace nlohmann
-namespace ndarray
-namespace boost
-namespace Eigen
+namespace ObjexxFCL
+namespace utility
+namespace numeric
+namespace basic
+namespace core
+namespace protocols
-namespace msgpack
-namespace mmtf

#+namespace cereal

#-namespace utility::keys
#-namespace utility::pointer
-class utility::VirtualBase
-class std::__weak_ptr

#-namespace utility::options
#-namespace basic::options

-class basic::thread_manager::AtomicBoolContainer

-namespace protocols::boinc


-include <boost/format/internals.hpp>
-include <boost/format/group.hpp>
-include <boost/graph/detail/adjacency_list.hpp>
-include <boost/function/function_template.hpp>
-include <boost/tuple/detail/tuple_basic.hpp>
-include <boost/unordered/detail/implementation.hpp>
-include <boost/unordered/unordered_map.hpp>
-include <boost/container/detail/std_fwd.hpp>
-include <boost/smart_ptr/detail/sp_counted_base_clang.hpp>

+include <python/PyRosetta/binder/source/stl_binders.hpp>
+include <python/PyRosetta/include/rosetta_binders.hpp>

+include_for_class numeric::alignment::rmsd_calc <numeric/alignment/rmsd_calc.py.hh>
+binder numeric::alignment::rmsd_calc numeric::alignment::bind_rmsd_calc<pybind11::module>

+include_for_class protocols::indexed_structure_store::StructureStore <protocols/indexed_structure_store/StructureStore.py.hh>
+binder protocols::indexed_structure_store::StructureStore protocols::indexed_structure_store::bind_StructureStore<pybind11::module>

# By-hand bindings defined to support numpy array interface for structure data.
+include_for_class protocols::indexed_structure_store::search::StructureDatabase <protocols/indexed_structure_store/search/QueryDatabase.py.hh>
+binder protocols::indexed_structure_store::search::StructureDatabase protocols::indexed_structure_store::search::bind_QueryDatabase<pybind11::module>
-class protocols::indexed_structure_store::search::StructureData
-class protocols::indexed_structure_store::search::StructurePairQuery
-class protocols::indexed_structure_store::search::StructureSingleQuery
-class protocols::indexed_structure_store::search::StructurePairQueryResult
-class protocols::indexed_structure_store::search::StructureSingleQueryResult
-class protocols::indexed_structure_store::search::PairQuerySummaryStatistics
-class protocols::indexed_structure_store::search::SingleQuerySummaryStatistics
-class protocols::indexed_structure_store::search::PairQueryExecutor
-class protocols::indexed_structure_store::search::SingleQueryExecutor

-function protocols::indexed_structure_store::extract_residue_entry
-function protocols::indexed_structure_store::extract_residue_entries
-function protocols::indexed_structure_store::apply_residue_entries_to_pose
-function protocols::indexed_structure_store::residue_entries_to_pose
-function protocols::indexed_structure_store::initial_pose_for_residues
+include_for_class protocols::indexed_structure_store::PoseUtilityPlaceholder <protocols/indexed_structure_store/pose_utility.py.hh>
+binder protocols::indexed_structure_store::PoseUtilityPlaceholder protocols::indexed_structure_store::bind_pose_utility<pybind11::module>

+binder std::vector binder::vector_binder
+binder std::map    binder::map_binder

# default generate bindings for std::multimap is not useful, disabling them for now until we have custom binder
#-class std::multimap

# disabling bindgins for deque until we have dedicated binder function
-class std::deque

#binder utility::vectorL rosetta_binders::vectorL_binder
+binder utility::vector0 rosetta_binders::vector0_binder
+binder utility::vector1 rosetta_binders::vector1_binder

+add_on_binder utility::fixedsizearray0 rosetta_binders::fixedsizearray0_add_on_binder
+add_on_binder utility::fixedsizearray1 rosetta_binders::fixedsizearray1_add_on_binder

-class utility::vectorL

+add_on_binder numeric::xyzVector rosetta_binders::xyzVector_add_on_binder
-function numeric::xyzVector::operator[]

+add_on_binder numeric::xyzMatrix rosetta_binders::xyzMatrix_add_on_binder

+add_on_binder std::basic_ostringstream rosetta_binders::stringstream_add_on_binder
+add_on_binder std::basic_istringstream rosetta_binders::stringstream_add_on_binder
+add_on_binder std::basic_stringstream  rosetta_binders::stringstream_add_on_binder

+add_on_binder std::set rosetta_binders::set_add_on_binder
+add_on_binder std::list rosetta_binders::list_add_on_binder

# CifParse, objects not in namespace and relative include path is used (ie #include "...")
-class Serializer
-class ISTable
-class Block


# template operator() creation for wrong numbers of arguments (depends on second template parameter).
-class fem::arr_ref
-class fem::arr_cref

# Mac specifics
-class std::__bit_reference
-class std::__bit_const_reference

# Missing members on Linux+Clang
-function std::_Bit_iterator::_M_const_cast
-function std::_Bit_const_iterator::_M_const_cast

# Mac specifics: ld: illegal text reloc in '__Z16bind_std_sstreamRNSt3__18functionIFRN8pybind116moduleERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE' to '__ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE' for architecture x86_64
# -function std::basic_ios::widen
# -function std::basic_ios::narrow
# -function std::basic_ios::imbue
# -function std::basic_ios::fill
# -function std::basic_ios::rdbuf
# -function std::basic_ios::tie
-class std::basic_ios
#-class std::basic_istream
#-class std::basic_ostream
-function std::basic_istream::gcount


# ObjexxFCL

# Dimension copy constructor define as explicit and instead create a reference to orginal object so operator returning copy of the object could not be binded
-function ObjexxFCL::Dimension::operator++
-function ObjexxFCL::Dimension::operator--

# no '*' and '/' operators for template types defined
-function ObjexxFCL::FArray::operator+=
-function ObjexxFCL::FArray::operator-=
-function ObjexxFCL::FArray::operator*=
-function ObjexxFCL::FArray::operator/=
-function ObjexxFCL::FArray::is_default
-function ObjexxFCL::FArray::is_zero
-function ObjexxFCL::FArray::is_uniform
-function ObjexxFCL::FArray::zero
-function ObjexxFCL::FArray::to_zero

# -function ObjexxFCL::FArray<std::string>::operator*=
# -function ObjexxFCL::FArray<std::string>::operator/=
# -function ObjexxFCL::FArray<utility::vector1<double, std::allocator<double> > >::operator*=
# -function ObjexxFCL::FArray<utility::vector1<double, std::allocator<double> > >::operator/=
# -function ObjexxFCL::FArray<utility::vector1<unsigned int, std::allocator<unsigned int> > >::operator*=
# -function ObjexxFCL::FArray<utility::vector1<unsigned int, std::allocator<unsigned int> > >::operator/=
# -function ObjexxFCL::FArray<utility::vector1<numeric::xyzVector<double>, std::allocator<numeric::xyzVector<double> > > >::operator*=
# -function ObjexxFCL::FArray<utility::vector1<numeric::xyzVector<double>, std::allocator<numeric::xyzVector<double> > > >::operator/=

# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::operator+=
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::operator-=
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::operator*=
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::operator/=
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::is_default
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::is_zero
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::is_uniform
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::zero
# -function ObjexxFCL::FArray<std::vector<unsigned long, std::allocator<unsigned long> > >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBIndNRChiSample<float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::BBDepNRChiSample<float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 2, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 4, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float> >::to_zero


# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<3, 5, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 1, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 2, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 3, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 4, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<4, 5, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 1, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 2, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 3, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 4, float> >::to_zero

# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::operator+=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::operator-=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::operator*=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::operator/=
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::is_default
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::is_zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::is_uniform
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::zero
# -function ObjexxFCL::FArray<core::pack::dunbrack::PackedDunbrackRotamer<5, 5, float> >::to_zero

-function ObjexxFCL::FArray1<std::string>::operator-=
-function ObjexxFCL::FArray1<std::string>::operator*=
-function ObjexxFCL::FArray1<std::string>::operator/=
-function ObjexxFCL::FArray1<std::string>::length
-function ObjexxFCL::FArray1<std::string>::length_squared
-function ObjexxFCL::FArray1<std::string>::normalize

-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::operator+=
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::operator-=
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::operator*=
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::operator/=
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::u
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::l
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::length
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::length_squared
-function ObjexxFCL::FArray1<ObjexxFCL::FArray1D<int> >::normalize

-function ObjexxFCL::FArray1D<std::string>::operator-=
-function ObjexxFCL::FArray1D<std::string>::operator*=
-function ObjexxFCL::FArray1D<std::string>::operator/=
-function ObjexxFCL::FArray1D<std::string>::length
-function ObjexxFCL::FArray1D<std::string>::length_squared
-function ObjexxFCL::FArray1D<std::string>::normalize

-function ObjexxFCL::FArray1D<ObjexxFCL::FArray1D<int> >::operator-=
-function ObjexxFCL::FArray1D<ObjexxFCL::FArray1D<int> >::operator*=
-function ObjexxFCL::FArray1D<ObjexxFCL::FArray1D<int> >::operator/=
-function ObjexxFCL::FArray1D<ObjexxFCL::FArray1D<int> >::length
-function ObjexxFCL::FArray1D<ObjexxFCL::FArray1D<int> >::length_squared
-function ObjexxFCL::FArray1D<ObjexxFCL::FArray1D<int> >::normalize

-function ObjexxFCL::FArray2::operator+=
-function ObjexxFCL::FArray2::operator-=
-function ObjexxFCL::FArray2::operator*=
-function ObjexxFCL::FArray2::operator/=
-function ObjexxFCL::FArray2::__str__
-function ObjexxFCL::FArray2::to_identity
-function ObjexxFCL::FArray2::diag
-function ObjexxFCL::FArray2::to_diag
-function ObjexxFCL::FArray2::is_identity
-function ObjexxFCL::FArray2::symmetric

-function ObjexxFCL::FArray2<std::string>::operator*=
-function ObjexxFCL::FArray2<std::string>::operator/=
-function ObjexxFCL::FArray3<utility::vector1<double, std::allocator<double> > >::operator*=
-function ObjexxFCL::FArray3<utility::vector1<double, std::allocator<double> > >::operator/=
-function ObjexxFCL::FArray3<std::vector<unsigned long, std::allocator<unsigned long> > >::operator*=
-function ObjexxFCL::FArray3<std::vector<unsigned long, std::allocator<unsigned long> > >::operator/=
-function ObjexxFCL::FArray3<utility::vector1<unsigned int, std::allocator<unsigned int> > >::operator*=
-function ObjexxFCL::FArray3<utility::vector1<unsigned int, std::allocator<unsigned int> > >::operator/=
-function ObjexxFCL::FArray3<utility::vector1<numeric::xyzVector<double>, std::allocator<numeric::xyzVector<double> > > >::operator*=
-function ObjexxFCL::FArray3<utility::vector1<numeric::xyzVector<double>, std::allocator<numeric::xyzVector<double> > > >::operator/=
-function ObjexxFCL::FArray2D<std::string >::operator*=
-function ObjexxFCL::FArray2D<std::string >::operator/=


-function ObjexxFCL::FArray2D::operator+=
-function ObjexxFCL::FArray2D::operator-=
-function ObjexxFCL::FArray2D::operator*=
-function ObjexxFCL::FArray2D::operator/=
-function ObjexxFCL::FArray2D::diag
-function ObjexxFCL::FArray2D::to_diag
-function ObjexxFCL::FArray2D::identity

-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::operator+=
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::operator-=
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::operator*=
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::operator/=
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::diag
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::identity
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::to_diag
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::to_identity
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::symmetric
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::is_identity
-function ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepNRChiSample<float> >::__str__

# no int to T conversion defined, could not instantiate template
-function ObjexxFCL::FArray2<std::string>::is_identity
-function ObjexxFCL::FArray2<std::string>::to_identity
-function ObjexxFCL::FArray2D<std::string>::identity

-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::operator+=
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::operator-=
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::operator*=
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::operator/=
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::to_diag
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::to_identity
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::is_identity
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::symmetric
-function ObjexxFCL::FArray2<core::pack::dunbrack::BBIndNRChiSample<float> >::__str__

-function ObjexxFCL::FArray3::operator+=
-function ObjexxFCL::FArray3::operator-=
-function ObjexxFCL::FArray3::operator*=
-function ObjexxFCL::FArray3::operator/=
-function ObjexxFCL::FArray3::__str__

-function ObjexxFCL::FArray3D::operator+=
-function ObjexxFCL::FArray3D::operator-=
-function ObjexxFCL::FArray3D::operator*=
-function ObjexxFCL::FArray3D::operator/=
-function ObjexxFCL::FArray3D::__str__=

-function ObjexxFCL::FArray3D<utility::vector1<double, std::allocator<double> > >::operator*=
-function ObjexxFCL::FArray3D<utility::vector1<double, std::allocator<double> > >::operator/=
-function ObjexxFCL::FArray3D<std::vector<unsigned long, std::allocator<unsigned long> > >::operator*=
-function ObjexxFCL::FArray3D<std::vector<unsigned long, std::allocator<unsigned long> > >::operator/=
-function ObjexxFCL::FArray3D<utility::vector1<unsigned int, std::allocator<unsigned int> > >::operator*=
-function ObjexxFCL::FArray3D<utility::vector1<unsigned int, std::allocator<unsigned int> > >::operator/=
-function ObjexxFCL::FArray3D<utility::vector1<numeric::xyzVector<double>, std::allocator<numeric::xyzVector<double> > > >::operator*=
-function ObjexxFCL::FArray3D<utility::vector1<numeric::xyzVector<double>, std::allocator<numeric::xyzVector<double> > > >::operator/=

# no corresponding operator is defined...
-function ObjexxFCL::FArray<std::string>::operator-=
-function ObjexxFCL::FArray2<std::string>::operator-=
-function ObjexxFCL::FArray2D<std::string>::operator-=

-function ObjexxFCL::FArray2<numeric::xyzVector<double> >::operator*=
-function ObjexxFCL::FArray2<numeric::xyzVector<double> >::operator/=

-function utility::fixedsizearray1iterator<unsigned long, 4>::operator+=
-function utility::fixedsizearray1iterator<unsigned long, 4>::operator-=
-function utility::fixedsizearray1iterator<unsigned long, 5>::operator+=
-function utility::fixedsizearray1iterator<unsigned long, 5>::operator-=
-function utility::fixedsizearray1iterator<double, 4>::operator+=
-function utility::fixedsizearray1iterator<double, 4>::operator-=
-function utility::fixedsizearray1iterator<double, 5>::operator+=
-function utility::fixedsizearray1iterator<double, 5>::operator-=

-class utility::vector1< utility::options::FileOption, std::allocator<utility::options::FileOption> >
-class utility::vector1< utility::vector1<core::scoring::DerivVectorPair, std::allocator<core::scoring::DerivVectorPair> >,std::allocator<utility::vector1<core::scoring::DerivVectorPair, std::allocator<core::scoring::DerivVectorPair> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<1> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<1> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<2> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<2> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<2> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<3> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<2> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<4> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<2> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<5> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<3> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<3> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<4> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<4> > > >
-class utility::vector1< ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<5> >,std::allocator<ObjexxFCL::FArray2D<core::pack::dunbrack::BBDepScoreInterpData<5> > > >

-class utility::vector1< utility::vector1<core::scoring::AtomNeighbor, std::allocator<core::scoring::AtomNeighbor> >,std::allocator<utility::vector1<core::scoring::AtomNeighbor, std::allocator<core::scoring::AtomNeighbor> > > >
-class utility::vector1< utility::vector1<core::scoring::SmoothScoreTermCoeffs, std::allocator<core::scoring::SmoothScoreTermCoeffs> >,std::allocator<utility::vector1<core::scoring::SmoothScoreTermCoeffs, std::allocator<core::scoring::SmoothScoreTermCoeffs> > > >
-class utility::vector1< utility::vector1<utility::vector1<core::scoring::AtomNeighbor>>, 1, utility::vector1<core::scoring::AtomNeighbor>, std::allocator<utility::vector1<core::scoring::AtomNeighbor>> >
-class utility::vector1< std::list<protocols::match::Hit, std::allocator<protocols::match::Hit> >,std::allocator<std::list<protocols::match::Hit, std::allocator<protocols::match::Hit> > > >
-class utility::vector1< std::tuple<unsigned long, utility::vector1<core::id::TorsionID, std::allocator<core::id::TorsionID> >, double>,std::allocator<std::tuple<unsigned long, utility::vector1<core::id::TorsionID, std::allocator<core::id::TorsionID> >, double> > >
-class utility::vector1< std::pair<core::scoring::disulfides::DisulfideAtomIndices, core::scoring::disulfides::DisulfideAtomIndices>,std::allocator<std::pair<core::scoring::disulfides::DisulfideAtomIndices, core::scoring::disulfides::DisulfideAtomIndices> > >
-class utility::vector1< utility::vector1<core::scoring::SmoothScoreTermCoeffs>,std::allocator<utility::vector1<core::scoring::SmoothScoreTermCoeffs> > >
-class utility::vector1< core::scoring::AtomNeighbor,std::allocator<core::scoring::AtomNeighbor> >
-class utility::vector1< utility::vector1<utility::vector1<core::scoring::AtomNeighbor> >,std::allocator<utility::vector1<utility::vector1<core::scoring::AtomNeighbor> > > >
-class utility::vector1< std::list<protocols::match::Hit>,std::allocator<std::list<protocols::match::Hit> > >

-function utility::fixedsizearray1::operator==
# -function utility::fixedsizearray1<numeric::MathNTensor<double, 1>,2>::operator==
# -function utility::fixedsizearray1<numeric::MathNTensor<double, 2>,4>::operator==
# -function utility::fixedsizearray1<numeric::MathNTensor<double, 3>, 8>::operator==
# -function utility::fixedsizearray1<numeric::MathNTensor<double, 4>, 16>::operator==
# -function utility::fixedsizearray1<numeric::MathNTensor<double, 5>, 32>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 2>, 4>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 3>, 8>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 4>, 16>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 5>, 32>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float>,2>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 1, float>,4>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float>,8>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 3, float>,16>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<1, 5, float>,32>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<2, 1, float>,2>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<2, 2, float>,4>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<2, 3, float>,8>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<2, 4, float>,16>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<2, 5, float>,32>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<3, 1, float>,2>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<3, 2, float>,4>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<3, 3, float>,8>::operator==
# -function utility::fixedsizearray1<core::pack::dunbrack::PackedDunbrackRotamer<3, 4, float>,16>::operator==

-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,1>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,2>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,3>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,4>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,5>

-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,1UL>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,2UL>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,3UL>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,4UL>
-class utility::fixedsizearray1<std::shared_ptr<const core::pack::dunbrack::ResidueDOFReporter>,5UL>

-function utility::keys::KeyLookup::remove
-function utility::io::mpi_stream::release_file
-function utility::io::mpi_stream::basic_mpi_ostreambase::release_file
#-class utility::io::mpi_stream::basic_mpi_streambuf
#-class utility::io::mpi_stream::basic_mpi_ostreambase
#-class utility::io::mpi_stream::basic_mpi_streambuf<char, std::char_traits<char>, std::allocator<char>, unsigned char, std::allocator<unsigned char> >
#-function utility::io::mpi_stream::basic_mpi_streambuf::release_file

-class utility::FixedSizeLexicographicalIterator

-class numeric::coordinate_fitting::CoordinateArray_RMSD_FlatLookup<double>
-class numeric::coordinate_fitting::FlatLookup<double *,unsigned long,double>

-class numeric::interpolation::InterpolatedPotential
-class numeric::VoxelGrid
-class numeric::interpolation::InterpolatedPotential
-function numeric::interpolation::spline::PolycubicSpline<3ul>::dFdall

-class core::id::AtomID_Map<unsigned long>
-function core::id::AtomID_Map<unsigned long>::AtomID_Map<const unsigned long>()
-function core::id::AtomID_Map<unsigned long>::AtomID_Map<const unsigned long &>()
-function core::id::AtomID_Map<core::scoring::packstat::LR_AtomData>::all_default

-function core::fragment::CacheWrapper<protocols::simple_moves::GunnTuple, core::fragment::MapCacheUnit<protocols::simple_moves::GunnTuple>>::retrieve

-function basic::Tracer::create_impl
-function basic::MemTracer::create_impl

# problem with bool specialization? error: address of overloaded function 'swap' does not match required type 'void (core::id::DOF_ID_Map<bool> &, core::id::DOF_ID_Map<bool> &)'
-function core::id::swap

-function core::id::AtomID_Map<core::scoring::packstat::LR_MP_AtomData>::all_default

-class std::_Rb_tree_iterator
#-function std::map::insert
#-function std::multimap::insert

-function std::list::unique
-function std::list::merge
-function std::list::sort
-function std::list::remove
# functions take interator references, no valid access pattern
-function std::list::splice
-function std::list::insert
-function std::list::erase




# bag of pointers?
-class std::list<const protocols::match::Hit *,std::allocator<const protocols::match::Hit *>>

-class std::list<std::pair<double, core::pose::rna::BaseStack>,std::allocator<std::pair<double, core::pose::rna::BaseStack> >>

-class std::list<utility::keys::VariantKey<utility::options::OptionKey>,std::allocator<utility::keys::VariantKey<utility::options::OptionKey> >>

# temp, until Pybind11 upstream fix this
# -function cereal::OutputArchive::registerSharedPointer
# -function cereal::InputArchive::getSharedPointer
# -function cereal::InputArchive::registerSharedPointer

# problem with SFINAE template argument
-function cereal::XMLInputArchive::loadValue
-function cereal::JSONInputArchive::loadValue


# workaround for Linux+LLVM-4.0 issues
# -class std::allocator
# -class utility::keys::Key
# -class utility::options::Option
# -class utility::options::VectorOption
# -class utility::options::ScalarOption
# -class utility::options::ScalarOption_T_
# -class utility::options::VectorOption_T_

# Pybind11-2.2 migration
-function std::list<double, std::allocator<double> >::list(unsigned long)
-function std::list<double, std::allocator<double> >::list(unsigned long, const double &)

# nlohmann::json library does not cooperate with PyRosetta; workaround:
-class nlohmann::basic_json

# Pybind 2.2.2+ regression, see https://github.com/pybind/pybind11/issues/1283
-class W128_T

# absent nested base class (templated)
-class numeric::geometry::hashing::xyzStripeHash::iter_base
-class numeric::geometry::hashing::xyzStripeHash::const_iterator

# --------------------------------
# extra include for serialization build
+include_for_class cereal::OutputArchive <cereal/types/map.hpp>
+include_for_class cereal::InputArchive <cereal/types/map.hpp>

+include_for_class cereal::OutputArchive <cereal/types/polymorphic.hpp>
+include_for_class cereal::InputArchive  <cereal/types/polymorphic.hpp>

# RDKit --------------------------
# Internal RDKit types which cause wrapping/compilation issues.
-class std::map<int,std::list<RDKit::Atom *, std::allocator<RDKit::Atom *> >,std::less<int>,std::allocator<std::pair<const int, std::list<RDKit::Atom *, std::allocator<RDKit::Atom *> > > >>
-class std::map<int,std::list<RDKit::Bond *, std::allocator<RDKit::Bond *> >,std::less<int>,std::allocator<std::pair<const int, std::list<RDKit::Bond *, std::allocator<RDKit::Bond *> > > >>
-class std::map<int,std::list<RDKit::Atom *>,std::less<int>,std::allocator<std::pair<const int, std::list<RDKit::Atom *> > >>
-class std::map<int,std::list<RDKit::Bond *>,std::less<int>,std::allocator<std::pair<const int, std::list<RDKit::Bond *> > >>
-class std::map<int,std::list<RDKit::Atom *>>
-class std::map<int,std::list<RDKit::Bond *>>
-class std::vector<RDKit::StereoGroup>

# RDKit fixes
+include_for_namespace RDKit <GraphMol/RingInfo.h>

+include_for_class RDKit::RDValue <RDGeneral/RDValue.h>
+include_for_class RDKit::ROMol <GraphMol/ROMol.h>
+include_for_class RDKit::Atom  <GraphMol/Atom.h>
+include_for_class RDKit::Bond  <GraphMol/Bond.h>
#+include_for_class RDKit::RingInfo <GraphMol/RingInfo.h>


# M1 related issues
-function core::scoring::packstat::AtomRadiusMap::operator=
-function core::pack::guidance_scoreterms::sap::SapConstraintHelper::operator=

# GCC-11+ workarounds
# -function protocols::mean_field::jagged_array<double, std::allocator<double> >::insert
# -function protocols::mean_field::jagged_array::insert


#-class __gnu_cxx::__normal_iterator<class utility::vector1<double, class std::allocator<double> >
#-class __gnu_cxx::__normal_iterator<class utility::vector1<double, class std::allocator<double> > *, class std::vector<class utility::vector1<double, class std::allocator<double> >, class std::allocator<class utility::vector1<double, class std::allocator<double> > > > >



# -function utility::vector1<utility::vector1<double, std::allocator<double> >,std::allocator<utility::vector1<double, std::allocator<double> > >>::insert
# -function utility::vector1::insert

-class __gnu_cxx::__normal_iterator

-class std::chrono::duration<double,std::ratio<1, 1> >

# C++14
-class std::reference_wrapper
-function std::basic_streambuf::stossc

# libtorch
-namespace c10
-namespace at

# tensorflow
-enum TF_DataType
-class utility::vector1< basic::tensorflow_manager::RosettaTensorflowTensorContainer<int>,std::allocator<basic::tensorflow_manager::RosettaTensorflowTensorContainer<int> > >
-class utility::vector1< basic::tensorflow_manager::RosettaTensorflowTensorContainer<float>,std::allocator<basic::tensorflow_manager::RosettaTensorflowTensorContainer<float> > >
-function protocols::trRosetta::trRosettaMultipleSequenceAlignment::operator=
